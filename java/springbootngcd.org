* Spring Boot Angular 2 Continuou Delivery Pipeline
** Setting up Spring Boot Microservices
*** Authentication API
**** Maven begin project
**** Set up H2 Database
**** Set up User Table
**** Set up Rest API
**** Set up Persistence Model
**** Liquibase Migration


*****  pom.xml
#+BEGIN_SRC xml
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
	</dependency>
#+END_SRC

***** application.properties
#+BEGIN_SRC 
liquibase.changeLog=classpath:liquibase/migrations/db.changelog.xml
liquibase.url=${spring.datasource.url}
liquibase.user=${spring.datasource.username}
liquibase.password=${spring.datasource.password}
liquibase.dropFirst=false
#+END_SRC

***** /src/main/resources/liquibase/migrations/db.changelog.xml
#+BEGIN_SRC xml
<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <include file="liquibase/migrations/db.changelog.0.0.1.xml" />

</databaseChangeLog>
#+END_SRC

***** /src/main/resources/liquibase/migrations/db.changelog.0.0.1.xml
#+BEGIN_SRC xml
<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <changeSet author="amitthk" id="1">
    <sql dbms="h2"
            endDelimiter=";"
            splitStatements="true"
            stripComments="true">
            DROP TABLE USERS IF EXISTS;
	CREATE TABLE USERS (
	ID BIGINT auto_increment PRIMARY KEY,
	USERNAME VARCHAR(255),EMAIL VARCHAR(255),PASSWORDHASH VARCHAR(255),SALT VARCHAR(255), CREATEDATE DATE, LASTLOGIN DATE,LASTUPDATE DATE);
    </sql>
    
	<sql dbms="PostgreSQL"
	            endDelimiter=";"
	            splitStatements="true"
	            stripComments="true">
	CREATE TABLE IF NOT EXISTS USERS (
	ID BIGSERIAL PRIMARY KEY,
	USERNAME VARCHAR(255),
	EMAIL VARCHAR(255),
	PASSWORDHASH VARCHAR(255),
	SALT VARCHAR(255), 
	CREATEDATE DATE, 
	LASTLOGIN DATE,
	LASTUPDATE DATE);
	    </sql>
</changeSet>
    
</databaseChangeLog>
#+END_SRC


**** Mybatis

***** pom.xml
#+BEGIN_SRC xml
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.0</version>
		</dependency><!--$NO-MVN-MAN-VER$-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.5</version>
		</dependency>
#+END_SRC

***** PersistenceConfiguration
#+BEGIN_SRC xml
public class PersistenceConfiguration {
	@Bean
	@ConfigurationProperties(prefix="spring.datasource")
	@Primary
	public DataSource dataSource() {
		DriverManagerDataSource dataSource = new DriverManagerDataSource();
        return dataSource;
	}
	

    @Bean
    public SqlSessionFactoryBean sqlSessionFactory() throws Exception {
        SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean();
        sessionFactory.setDataSource(dataSource());
        sessionFactory.setTypeAliasesPackage("com.amitthk.springbootngcd.domain");
        return sessionFactory;
    }
#+END_SRC
***** Application Properties
#+BEGIN_SRC 
spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.database.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:file:~/mysbappdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.max-active=5
spring.datasource.max-idle=3
spring.datasource.max-wait=10000
spring.datasource.min-evictable-idle-time-millis=1000
spring.datasource.min-idle=8
spring.datasource.time-between-eviction-runs-millis=1
#+END_SRC
***** UserInfoMapper
#+BEGIN_SRC java
public interface UserMapper {
    int deleteByPrimaryKey(Long id);
    Long insert(UserInfo record);
    int insertSelective(UserInfo record);
    UserInfo selectByPrimaryKey(Long id);
    UserInfo selectByEmail(String id);
    List<UserInfo> selectAll();
    int updateByPrimaryKeySelective(UserInfo record);
    int updateByPrimaryKey(UserInfo record);
}
#+END_SRC
Use the XML mappings generated by mybatis-generator

**** Setup JWT token authentication
**** Setup Spring Security
*** Dashboard API
**** Set Up JWT Token Authentication
** Tools
*** Swagger, Apiary
*** Postman, Curl
*** Burp/Charles/Fiddler
*** Wireshark
Filter, follow stream
- http
- ssl
** Setting up front end
*** NPM initiate Angular 2 Project
**** Add bootstrap
**** Add login and register controls
**** Add authentication service
**** Add dashboard service
**** Add Authentication guard and UI
** Continuous Integration
*** Front End
**** Dockerfile and Docker-Compose
***** Our infratructure
***** Nginx
**** Using Make to perform the build
***** Clean
***** Install and Build
***** Archive
***** Publish
***** Cleanprod, Deploy
**** Jenkinsfile
*** Back end APIs 
**** Dockerfile and Docker-Compose
***** Spring boot java application
***** active profiles
**** Maven
***** Eclipse shows errors even if maven compiles
1. Go to Window -> Show View -> Problems

Or check if any warnings are shown in your Maven build. If any of the Jars show up signature issues - delete the old ones get the new ones.

If you found some of the Jar's giving problem in your .m2 directory. Delete them and rebuild the pom.

Get rid of all the warnings. Then

Project > Clean and
Maven > Update Project

2. Get the latest Maven from Here:
https://maven.apache.org/download.cgi

Install it and set the M2_HOME and Path.

3. Set the maven to system one in Windows > Preferences > Maven > Installations and ADD the location to your maven installation.


4. Download Latest m2e plugin

http://download.eclipse.org/technology/m2e/releases

Nothing helped? Download the latest eclipse/STS.

***** Clean PacKage
**** Make 
***** publish
***** clean deploy
**** Jenkinsfile
** Continuous Deployment
*** Playbook roles
**** Download latest
**** Install prerequisites
**** Build Images
**** Run containers
***** Postgresql database
***** Authentication API
****** Liquibase Migrations
***** Front End
****** Nginx hosting the front end
****** Nginx Mapping to upstream containers
