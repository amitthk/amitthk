* aws cli
** s3
S3 get latest
#+BEGIN_SRC 
aws s3 ls s3://devopsmaster-repo/user-api/ --recursive | sort | tail -n 1 | awk '{print $4}'

List all Jars:
aws s3 ls --recursive s3://devopsmaster-repo/user-api | grep '.*\.jar' | awk -F " " '{print $4}'
#+END_SRC


** cloudformation

- Either aws configure should be called or following params should be set
#+BEGIN_SRC 
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
                accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                credentialsId: "${repo_bucket_credentials_id}", 
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]){
//coudformation here
}
#+END_SRC

- Region should be set either via environment variable or passed to cli

#+BEGIN_SRC 
export AWS_DEFAULT_REGION=ap-southeast-1

#OR

aws --region=ap-southeast-1 cloudformation ......

#+END_SRC

- cf-params for the cloudformation template file
#+BEGIN_SRC 
cat <<EOF > cf-params.json
[
    { "ParameterKey": "KeyName",
    "ParameterValue": "cdhstack_admin"
    },
    {"ParameterKey": "InstanceType",
    "ParameterValue": "${INSTANCE_TYPE}"
    },
    {"ParameterKey": "ImageId",
        "ParameterValue": "${AMI_ID}"
    }
]
EOF

#+END_SRC

- Create stack and wait for create complete

#+BEGIN_SRC 

                    aws  cloudformation create-stack --stack-name=${STACK_NAME} --template-body file://cloudformation-stack.yml --parameters file://cf-params.json
                    aws  cloudformation wait stack-create-complete --stack-name=${STACK_NAME}
                    aws  cloudformation describe-stacks  --stack-name=${STACK_NAME}


#+END_SRC

- describe instances and create inventory

#+BEGIN_SRC 

cat << EOF > hosts
[all:vars]
ansible_ssh_user: centos
ansible_ssh_private_key_file: ~/.ssh/cdhstack_admin.pem
ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
ansible_become_user: root
ansible_become_method: sudo

[ec2]
EOF

                    aws  ec2 describe-instances --filters Name=tag:Name,Values=${STACK_NAME} --query "Reservations[*].Instances[*].PublicIpAddress" --output=text >> hosts
                    cat hosts

#+END_SRC

- Delete stack and wait for deletion complete
#+BEGIN_SRC 
            aws  cloudformation delete-stack --stack-name atk-test
            aws  cloudformation wait stack-delete-complete --stack-name=${STACK_NAME}
#+END_SRC
