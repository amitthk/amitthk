** Amazon Web Services
   
*** Introduction
**** Cloud computing
- On demand
- IT resources
- Accessible online
- Pay as you go
- Low Cost
- Elastic (Scale up or down)
- Flexible(select what you need)
- Secure
 
***** Gartner Magic Quadrant - AWS at the top
 
***** AWS Advantages
- No upfront investment
- Low ongoing cost
- Focus on Innovations
- Flexible Capacity
  - Precision when needed
  - Turn off if you don't need
- Speed & Agility - fast on demand precision
- Global reach
  - Deploy to regions on demand
  - Low latency
 
 
|---------------------+-------------------------------------------|
| On premise          | AWS                                       |
| Security            | Security groups, NACLs, Access management |
| Network             | ELB, VPC                                  |
| Servers             | AMI =EC2=> Instances                      |
| Storage & Databases | Ephemeral  EBS  SS RDS                    |
|                     |                                           |
- Each region has multiple Availability Zones
- Availability Zone
  - Collection of datacenters in region
  - Isolated
  - Connected vial low latency link
- Edge Locations
  - Amazon Cloudfront
    - Host a CDN
    - Request routed to nearest Edge Location
    - Addition to Availability Zone
 
 
 
*** AWS Core Services
 
- Popular
  - Compute
  - Storage & CDN
  - DB
  - Networking
  - Management tools
  - Security & Identity
  - Analytics
  - Application Services
  - Enterprise Applications
 
**** Compute
***** EC2
- Instances optimized for
  - memory
  - compute
  - storage
  - GPU
  - General purpose
- Or Choose an OS and customize your own
 
 
| General Purpose | compute | Storage, IO | GPU | Memory Optimized | Smaller Instances |
| M4              | C4      | I2 D2       | G2  | R3               | t2                |
| m3              | c3      | i2          |     |                  |                   |
| M1              | c1 cc2  | hI1 HS1     | CG1 | M2 CR1           | t1                |
|                 |         |             |     |                  |                   |
 
- Pricing Models
  - Purchase Types
    - On demand
      - Pay by hour
      - No long term contract
    - Pay Upfront
      - 50 - 75% lower
    - Reserved instances
    - Spot Instances
      - Bid for unused EC2
    - Dedicated
      - In your VPC
      - Isolated at your vpc
      - Steady state workload
- Marketplace - configured AMIs with software
 
 
***** Amazone ECS (container service)
 
 
***** Amazon Lambda (Run code without provisioning)
 
- Event driven
- code in response to events
- manage compute infrastructure
- run code without provisioning servers
 
 
**** Storage
 
 
- General storage types
  - block storage - lower level - fixed-size blocks - over a network in form of Storage area network (SAN) - protocols iSCSI, Fibre Channel
  - file storage - OS level - named hierarchy of files & folders - over a network in form of Network Attached Storage (NAS) file server or "filer" - Common Internet File System(CIFS) or NFS
  
  
***** S3
 
- storage for EBS, RDS snapshots, data staging or loading mechanism for Redshift and DynamoDB etc.

- use lifecyle policies to migrate data to most appropriate storage

- simple flat folder, no bucket inside bucket -you GET and PUT object as whole. can't "mount" a bucket and "open" and object or install OS or run DB on it.

- Buckets op level namespace.  63 lowercase letters, numbers, hyphens and periods.  100 per account by default.

- Namespace is global but data is stored in region. u can explicity copy data to another bucket in different region.

- object range 0byest to 5TB. one bucket can store unlimited objects. S3 = unlimited storage.
- Durability - will my data be there in future - 99.99999 (11 nines) 

- The total volume of data and number of objects you can store are unlimited. Individual Amazon S3 objects can range in size from a minimum of 0 bytes to a maximum of 5 terabytes. 
- The largest object that can be uploaded in a single PUT is 5 gigabytes. For objects larger than 100 megabytes, customers should consider using the Multipart Upload capability.

- availabilty - can i access my data right now - 99.99%

- Storage classes
  - Standard/ general purpose - low first-byte latency and hight throughput
    - Designed for durability of 99.999999999% of objects across multiple Availability Zones
    - Designed for 99.99% availability over a given year
  - Amazon S3 Intelligent-Tiering (S3 Intelligent-Tiering)
    - For unknown or unpredictable access patterns
    - S3 monitors access patterns of the objects in S3 Intelligent-Tiering, and moves the ones that have not been accessed for 30 consecutive days to the infrequent access tier. If an object in the infrequent access tier is accessed, it is automatically moved back to the frequent access tier
    - durability of 99.999999999%, 99.9% availability over a given year
    - Resilient against events that impact an entire Availability Zone

  - Infrequent access - same durability, low latency and hight throughput - designed for long-lived less frequent
    - accessed less frequently, but requires rapid access when needed. S3 Standard-IA offers the high durability, high throughput, and low latency of S3 Standard, with a low per GB storage price and per GB retrieval fee
    - durability of 99.999999999%, 99.9% availability over a given year
    - lower per-GB montly cost
    - minimum object size 128KB. minimum duration 30 days, and per-GB retrieval cost
    - suitable for data tored for longer than 30 days
  - Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)
    - 99.5% availability, Because S3 One Zone-IA stores data in a single AWS Availability Zone, data stored in this storage class will be lost in the event of Availability Zone destruction.



  - Reduced redundancy -  archive - lower durability (4 nines). suitable for derived data that can be reproduced like thumbnails.
  - Glacier - issue a restore command - 3 to 5 hours later copied to S3 RRS.
  - 5% of s3 data free every month
- eventually consistent
  - data auto replicated qaccross servers in region
  - PUT - read after write
  - PUT to existing object - DELETEs for object - eventual consistency
- Access control
  - coarse grained - ACLs
  - fine grained - bucket policies, AWS IAM policies, query-string auth.

|                                    | S3 Standard             | S3 Intelligent-Tiering* | S3 Standard-IA          | S3 One Zone-IA†         | S3 Glacier              | "S3 Glacier Deep Archive" |
| Designed for durability            | "99.999999999%(11 9’s)" | "99.999999999%(11 9’s)" | "99.999999999%(11 9’s)" | "99.999999999%(11 9’s)" | "99.999999999%(11 9’s)" | "99.999999999%(11 9’s)"   |
| Designed for availability          | 99.99%                  | 99.90%                  | 99.90%                  | 99.50%                  | 99.99%                  | 99.99%                    |
| Availability SLA                   | 99.90%                  | 99%                     | 99%                     | 99%                     | 99.90%                  | 99.90%                    |
| Availability Zones                 | ≥3                      | ≥3                      | ≥3                      | 1                       | ≥3                      | ≥3                        |
| Minimum capacity charge per object | N/A                     | N/A                     | 128KB                   | 128KB                   | 40KB                    | 40KB                      |
| Minimum storage duration charge    | N/A                     | 30 days                 | 30 days                 | 30 days                 | 90 days                 | 180 days                  |
| Retrieval fee                      | N/A                     | N/A                     | per GB retrieved        | per GB retrieved        | per GB retrieved        | per GB retrieved          |
| First byte latency                 | milliseconds            | millseconds             | milliseconds            | milliseconds            | select minutes or hours | select hours              |
| Storage type                       | Object                  | Object                  | Object                  | Object                  | Object                  | Object                    |
| Lifecycle transitions              | Yes                     | Yes                     | Yes                     | Yes                     | Yes                     | Yes                       |


***** EBS
- 1GB to 16GB
- DB, FileSystem, Block level storage
- Auto replication on A2
- Snapshot backup to S3
- IO Provisioning
   - Provision or select IO
 
| Standard                | IOPS Provisioned        | General Purpose                  |
| Busty IO (e.g. Boot)    | IO Intensive            | Moderate Io                      |
| aVERAGE 100 iops        | 30 iops/gb              | Steady state                     |
| busrst to hundreds      | 4000 IOPS/GB ps         | 3 IOPS bust to 300 to 10,000IOPS |
| stripe multiple volumes | stripe multiple volumes | stripe multiple volumes          |
|                         |                         |                                  |                          |                         |                                  |
 
- S3 vs EBS
  - S3 durable, scalable store for static files
  - *
 
***** Glacier
optimized for data archiving - cold data.

used both as storage class (lifecyle management) and independent archival storage service.


- Backup
- High Durability  99.999999999  (11 nines)
- Retrieve in several hours
- $0.01 per GB/month
- Life cycle S3 to Glacier
  - Define rules
    - Identify apffected object
    - set a timeline
    - Actions to take
    - One way S3 -> Glacier
    - Glacier to permanent deletion
 
 
***** Snowball
 
- Petabyte data transport
- transfer large amount of data
- Simple fast secure
 
- Create job in AWS Management console  -> Snowball appliance will be shipped to  -> attach snowball to your network -> Amazon S3 AWS transfer to S3 bucket
 
- Common User Cases
  - Cloud migration
  - Dis... Procuenncy
  - Datacenter Decomissioning
  - Content distribution
 
 
 
***** Cloudfront
- Global CDN
- Can deliver static, streaming & interactive content
- No long term contract
 
**** Databases & CDN
***** RDS
 
- Compatible
  - SQL
  - MySql
  - Orac le
  - Prstgre sql
  - Appley patches updates automatically
 
***** DynamoDB
 
- Fast flexible nosql
- key value
- pay only for throughput and storage you need
 
***** DB Migration Services (DMS)
- Migrate your data from commercial & open source db(s)
- Oracle -> Oracle
- MSSQL -> MYsql
- Stream data to Redshift
 
 
***** Redshift
- Fully managed
- petabyte scale
- data warehousing & analytics
- JDBC, ODBC, PostGreSql drivers
- Security
  - Encryption SSL, AES-256
  - Network Isolation
  - Audit and compliance
 
**** Networking
***** VPC
- AWS VPC
  - IP Address
  - Public private subnets
  - Network topologies
  - Route tables & NACLs
  - Control Access & Security Groups
- Connect VPC to your OnPremise via VPN
- Attach an Elastic IP - internet accessible
 
- VPC
  - Internet - Internet Gateways
  - Corporate Data Centers - Virtual Private Gateways
  - Internet and Corporste DC - Internet Gateways & VP Gateways
  - VPC - other VPC
 
- Elastic
  - Up to 200 subnets per VPC
  - Flexible
  - Secure
  - Low Cost
 
***** AWS Direct Connect - OnPremise connect
- Direct connect from your OnPremise to AWS
- Can be provisioned to Virtual interfaces
- user same connection to access private resources
- Reduce bandwidth cost
- Consistent network performance
- Compatibl3e with all AWS svs
- Private connectivity to your amazone VPC
- Elastic
 
***** Route 53 - DNS
- Powerful management of dns records
- low latency dns resolution
- resolve user requests to both aws rsources and other infra
- Pay only for
  - Managed domains
  - number of queries resolved
- Routing policies
  - latency based
  - weighted round robin
  - DNS failover
- route 53 - ELB integrated
- Cloudfront Zone Apex Support
- S3 Zone Apex support
- Management Console
 

- vpc

A VPC is limited to a region, which means you can’t have a VPC spanning regions. 
Within a VPC, you have all the AZs that are part of the region where the VPC belongs
•  Subnets are AZ specific. For multiple AZs, create multiple subnets.

•  VPC are region specific. For multiple regions, create different VPCs.'
If you create more than one subnet in a VPC, the CIDR blocks of the subnets cannot overlap. 

From any subnet AWS reserves, the first four IP addresses and the last IP address are for internal networking purposes, and they are not available for your usage. Always keep this in mind while calculating the number of IP addresses in a subnet.
if a subnet does not have an Internet gateway in the route table, any servers that are part of that subnet won’t be able to access the Internet. Each subnet must have a route table at any time. How

However, you can associate multiple subnets with the same route table.
VPC’s default route table (known as the main route table) is created automatically, and you can’t modify it. VPC comes with an implicit router that is not visible. 

Using a NAT device, you can enable any instance in a private subnet to connect to the Internet, but this does not mean the Internet can initiate a connection to the instance.
Please note that NAT devices can be used only for IPv4 traffic; they can’t be used for IPv6. 

There are two types of NAT devices available within AWS.

•  NAT instances

•  NAT gateways

**** Management tools
 
***** cloudwatch
 
- Monitor AWS resources automatically
- custom metrices
- Resource utilization, operational performance, overall demand patterns
- metrics including CPU utilization, disk reads & writes, N/W traffic
- accessible via:
  - aws management console
  - api
  - sdk
  - CLi
 
***** cloudformation
 
- automated cration of aws structures & environments
- templates for aws resources creation
- deploy AWS resources using JSOn formatted template
- use sample template or create your own aws scenarios
- modify resources
  - template => stack
 
***** AWS trusted advisor
 
- advise on
  - Cost optimization
  - performance
  - security
  - fault tolerance
 
 
**** Security & Identity
 
***** IAM : Identity and Access management
 
- configurable aws access controls
 
- Create users
  - Manage permissions using groups
  - Password policy
  - Multifactored authentication MFA for previledged Users
  - IAM for ec2
  - IAM roles to share acces
  - Rotate security credentials
 
 
- IAM
  - Master User
    - Root/Admin
    - AWS Management console login
    - All permissions
  - IAM User
    - Granular permissions
    - Choose permissions
 
- Federation
  - AWS management console & API
  - Corporate directory or third party (e.g. Facebook/google etc.)
 
***** Web Application Firewall WAF
 
- rules to restrict attacks
  - like SQL Injection, corss site scripting etc.
 
**** Analytics
 
***** EMR: Elastic map reduce
- process vast amount of data "hadoop:
 
- Elastic map reduce
  - web indexing
  - data mining
  - log file analysis
  - financial analysis
  - swifsdafasdf etc.
 
***** Kinesis (for streaming data)
 
- streaming data collected, stored, processed continuously
 
- Capture -> firehose  -> S3/Redshift/AWS ES -> process -> analytics
 
- Kinesis (data) analytics
  - sql queries on streaming data
  - insights
 
- Kinesis streams
  - e.g. Captured streaming data (readers stats, personalized contents, suggestions) -> streams -> custom app built on kinesis
 
**** Application services
 
- A restful API
- Exposes
  - Lambda functions
  - HTTP endpoints
  - Other AWS services
 
- Adv
  - Low cost
  - Scale
  - Monitor
  - Development - multiple versions
  - Flexible security
  - Restful
- Functionality
  - Traffic management
  - authorization & access control
  - Monitoring
  - API Version management
 
***** Amazon SQS
- Scalable Messaging Queue
- Stores messages in transit
- e.g. point & click
 
e.g.
 
Users  ->
 
|       |     | -----AWS----------- | ---------------------- | ------------------ |
|       |     |                     | --> Request Queue -->  |                    |
| Users | --> | Web Server          |                        | Processing Servers |
|       |     |                     | <-- Response Queue <-- |                    |
|       |     | ------------------- | ---------------------- | -----------------  |
 
 
***** Amazon Workspaces
- Manageed desktop computing services
- cloud based desktop
- access from - Windows linux, MacOS etc.
- Ports 43, 4172, UDP -> 4172 open
 
 
***** User experience
  - OS , MS Office
  - Buy your own licenses
 
  - query api(s)
    - Low level api(s)
    - Make api calls using HTTP
    - Signature to auth. your req.
 
*** Professional Cloud Architecture & solutions 1
- AWS Devops
  - CI & Delivery
    - CI
      - Find & address bugs quickly
      - Imprrove S/W quality
      - reduce time to validate & release updated software
    - Continuous Delivery
      - Always have a trusted deployment ready copy
    - AWS Codepipeline (build, test, release )
      - Private GIT hosting
      - AWS Codecommit (GIT)
      - Deploy Automation
      - AWS CodeDeploy
                - Software release automation
  - Microservices
    - User containers
    - AWS Lambda
  - Infrastructure as code
    - Programatically provision
    - Scale
    - CloudFormation
    - Opswork(Chef)
    - Policy as code (AWS Config)
  - Monitoring & logging
    - Active Monitoring
      - Cloudwatch
      - Cloudtrail
                - Records API Calls
                - Delivers logs
  - Platform as service
    - Elastic Beanstalk
      - Upload code and EBS manages deployment of Web Apps
  - Version control
    - GIT, Codecommit
 
 
- Managed cloud migration
  - Direct connect - Dedicated Network connection 1GB - 10GB VPC line
  - Import Export Snowbal - 50/80TB
  - AWS Storage Gateways
    - Data is compressed and securely transferred to AWS
    - Storate Area Network - cache volume backups
    - Virtual Tape Library
  - S3 Transfer acceleration
  - Kinesis Firehose
- Unmanaged Cloud migration
  - rsync
  - S3 CLI (up to 5GB in one operation or multipart operation)
  - Glacier CLI - low movement of data
 
 
- Application Discovery Service
  - Identify Apps on premise data centers
  - dependencies
  - performance profiling
  - information is encrypted & can be exported as csv
    - Discover applications
      - Hostname, IP, MAC
    - Dependencies
      - Network communication
    - Measure application performance
      - CPU, memory utilization etc.
 
- AWS Server Migration Service
  - Large scale server migration
  - Create AMI's automatically and migrate
  - Automatic
  - Web, Mobile, IOT, BigData
  - AWS pricint tool
 
 
- Mobile
  - Automated dynamic scaling
  - global ....
  - all programming languages
  - Mobile API(s)
  - Built in CMS
  - Presiion testing fleets
    - test load
    - beta (simulate traffic)
    - Pre-Production e.g. staging
- Mobile features
  - Signature login
  - Data storage - S3
  - Lambda - cloud logi..g
  - NoSQL  - DynamoDB
  - App Analytics - AWS Analytics, Redshift
  - Content delivery
    - cloudfront
   - S3
  - Push Notifications - SNS
  - App testing - AWS Device farm
- Security groups
  - traffic filtering
    - Edge
    - host
  - ECL Security groups
    - firewall
    - protocols, Ports, IP ranges
- AWS IOT
- BigData
  - Collect -> s3 upload or AWS export/import
 
   
*** AWS Security
- ....
- .....
- AWS cerfication compliance and low level security compliance
- EC2 separated physically
- Hypervisor - Xen level security layer
- At EC2 level
  - Host OS
    - Only admin with perm
    - Multi factor authentication
    - Pupose bult hosts
    - Audits
  - Virtual os(gust os)
    - customer responsibility
    - secure your SSH etc
  - Firewall default deny all
  - Signed API calls
- AWS Cloudtrail
  - Records all API calls
  - Log files
- AWS Best Practices
  - Formal design Reviews
  - threat modelling
  - Risk assesment
  - static code analysis
  - Penetration testing
  - risk assesment reviews
*** AWS EMR

Launch the cluster with appropriate permissions.

connect using the key

#+BEGIN_SRC 
ssh -i /c//Apps/Tools/keys/all_keys/all_keys/cdhstack_admin.pem hadoop@ec2-52-221-223-15.ap-southeast-1.compute.amazonaws.com
#+END_SRC

Install the foxy proxy standard edition from chrome
https://chrome.google.com/webstore/search/foxy%20proxy


create following xml file

#+BEGIN_SRC 
<?xml version="1.0" encoding="UTF-8"?>
<foxyproxy>
    <proxies>
        <proxy name="emr-socks-proxy" id="2322596116" notes="" fromSubscription="false" enabled="true" mode="manual" selectedTabIndex="2" lastresort="false" animatedIcons="true" includeInCycle="true" color="#0055E5" proxyDNS="true" noInternalIPs="false" autoconfMode="pac" clearCacheBeforeUse="false" disableCache="false" clearCookiesBeforeUse="false" rejectCookies="false">
            <matches>
                <match enabled="true" name="*ec2*.amazonaws.com*" pattern="*ec2*.amazonaws.com*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="*ec2*.compute*" pattern="*ec2*.compute*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="10.*" pattern="http://10.*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="*10*.amazonaws.com*" pattern="*10*.amazonaws.com*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="*10*.compute*" pattern="*10*.compute*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="*.compute.internal*" pattern="*.compute.internal*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
                <match enabled="true" name="*.ec2.internal*" pattern="*.ec2.internal*" isRegEx="false" isBlackList="false" isMultiLine="false" caseSensitive="false" fromSubscription="false" />
            </matches>
            <manualconf host="localhost" port="8157" socksversion="5" isSocks="true" username="" password="" domain="" />
        </proxy>
    </proxies>
</foxyproxy>
#+END_SRC

Add the above xml as setings in foxy proxy in chrome.

Then go to following urls for access:

| Name of interface    | URI                                    |
| YARN ResourceManager | http://master-public-dns-name:8088/    |
| YARN NodeManager     | http://coretask-public-dns-name:8042/  |
| Hadoop HDFS NameNode | http://master-public-dns-name:50070/   |
| Hadoop HDFS DataNode | http://coretask-public-dns-name:50075/ |
| Spark HistoryServer  | http://master-public-dns-name:18080/   |
| Zeppelin             | http://master-public-dns-name:8890/    |
| Hue                  | http://master-public-dns-name:8888/    |
| Ganglia              | http://master-public-dns-name/ganglia/ |
| HBase                | http://master-public-dns-name:16010/   |
| JupyterHub           | https://master-public-dns-name:9443/   |
|                      |                                        |
*** Tips and tricks
**** Allow ec2 to access s3 buckets

- Create a role in IAM
In the role, while creating policies choose EC2
In the policies select s3 readonly/s3full access

- Go to EC2 dashboard
  - Right click on instance
  - Instance settings
  - Attach/Remove IAM role
  - Choose the above IAM Role

**** Restrict s3 bucket access to a particular IP and vpc only
#+BEGIN_SRC 
{
    "Version": "2012-10-17",
    "Id": "Policy1415115909152",
    "Statement": [
        {
            "Sid": "Access-to-specific-VPCE-only",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::jvcdp-repo",
                "arn:aws:s3:::jvcdp-repo/*"
            ],
            "Condition": {
                "StringNotEquals": {
                    "aws:sourceVpc": "vpc-6f4d330b"
                },
                "IpAddress": {
                    "aws:SourceIp": "58.182.32.136/32"
                }
            }
        }
    ]
}
#+END_SRC
