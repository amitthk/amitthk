* docker


** Useful dockerfiles

*** Ansible 

#+BEGIN_SRC 
FROM ubuntu:trusty

# Prevent dpkg errors
ENV TERM=xterm-256color

# Install Ansible
RUN apt-get update -qy && \
    apt-get install -qy software-properties-common && \
    apt-add-repository -y ppa:ansible/ansible && \
    apt-get update -qy && \
    apt-get install -qy ansible

# Copy baked in playbooks
COPY ansible /ansible

# Add volume for Ansible playbooks
VOLUME /ansible
WORKDIR /ansible

# Entrypoint
ENTRYPOINT ["ansible-playbook"]
CMD ["main.yml"]


#+END_SRC


** docker composes

*** postgresql springboot

#+BEGIN_SRC 
version: '2.0'
services:
    postresql_db:
        build: 
            context: ./ansible/dev/docker/postgresql/
        volumes:
            - ./ansible/dev/docker/postgresql/db:/var/lib/postgresql/data
        ports:
            - 5432:5432
        environment:
            - DEBUG=false
            - POSTGRES_USER=sa
            - POSTGRES_PASS=db_password
            - POSTGRES_DB=mypostgredatabase

    my_springboot_api:
        build: 
            context: ./ansible/dev/docker/my_springboot_api/
        volumes:
            - ./ansible/dev/docker/my_springboot_api/logs:/opt/logs
            - ./ansible/dev/docker/my_springboot_api/app:/opt/target
        ports:
            - 8091:8091
    #    links:
    #        - postgresql_db
#+END_SRC

*** jenkins

#+BEGIN_SRC 
---
version: '2'
services:
  jenkins:
    image: 'jenkins'
    ports:
      - '8080:8080'
    volumes:
      - './jenkins_home/:/var/jenkins_home'
#      - '/var/run/docker.sock:/var/run/docker.sock'
#      - '/usr/bin/docker:/usr/bin/docker'

#+END_SRC
