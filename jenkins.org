* Jenkins
** Install Jenkins
#+BEGIN_SRC 
sudo apt-get install openjdk-8-jdk -y
sudo apt-get install openjdk-8-jre -y

wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
echo deb http://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list
sudo apt-get update
sudo apt-get install -y jenkins

#+END_SRC


** Set The HTTP_PORT
#+BEGIN_SRC 
vi /etc/default/jenkins
#+END_SRC

Note: We can't listen to ports below 1024 without root privileges. It is better to not use jenkins under root permissions.
So we should either reverse proxy via Apache to jenkins or we can redirect via iptables.
~iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080~

For more info:
https://serverfault.com/questions/112795/how-to-run-a-server-on-port-80-as-a-normal-user-on-linux



** Install nodejs, openjdk, maven (optional)

#+BEGIN_SRC 

sudo apt-get install curl -y
curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo su
apt-get install nodejs -y
apt-get install openjdk-8-jdk -y
apt-get install openjdk-8-jre -y
apt-cache search maven
apt-get install maven
exit

#+END_SRC

** Install the necessary plugins
Some of important plugins are necessary like Pipeline suite,Credentials Binding Plugin, Git Pipeline integration, Maven Pipeline integration plugin, Cloudbees Amazon Web Services Credentials plugin etc.
** Git SSH Keys must be set properly
For some reason coying the keys to the /var/lib/jenkins/.ssh/id_rsa_xyz, and then specifying the path to it is not working.

So we need to generate the key from Jenkins User:

#+BEGIN_SRC 
sudo su jenkins
ssh-keygen
#follow the prompts
#+END_SRC
Now copy this public key to bitbucket account. And 

** Fix the NPM Permission issue while running npm install

#+BEGIN_SRC 
sudo su jenkins
sudo chown -R $(whoami) ~/.npm
#+END_SRC

This doesnt fix all the problems follow the following blog:
https://docs.npmjs.com/getting-started/fixing-npm-permissions

Or else, follow these steps:

1. If your npm directory is /usr/local

Run this command

#+BEGIN_SRC 
 npm config get prefix
#+END_SRC

If it says /usr/local  - that≈õ great. (OTHERWISE MOVE to Option 2 below)

#+BEGIN_SRC 
 sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}
#+END_SRC

1. Change npm default directory

   1. Make a directory for global installations:

	mkdir ~/.npm-global

   2. Configure npm to use the new directory path:

	   npm config set prefix '~/.npm-global'

   3. Open or create a ~/.profile file and add this line:

	      export PATH=~/.npm-global/bin:$PATH

   4.  Back on the command line, update your system variables:

      source ~/.profile

** Webhook for multibranch pipeline

- Use the endpoint  /job/job-name/build.
- Create a user with an API token
  - go to Manage Jenkins
  - Manage Users
  - Gear icon
  - Show API Token,
- Use the username and token for your request as:
  - http://polluser:00b8a600-2360-4e06-a545-818244dae05a@myjenkins.net/job/user-api/build
- If you get curmb issue, you will need to disable CRSF in Global Security Settings. 

Worth it? Not sure. Better use specialized plugins. Polling is expensive.

** Jenkins cannot connect to docker daemon
*** Make sure jenkin is in docker group *
#+BEGIN_SRC 
sudo sudo usermod -aG docker $USER
sudo usermod -aG docker jenkins

#+END_SRC
**** Update the docker.service **

Edit the following file : 
~vi /usr/lib/systemd/system/docker.service~

*** And edit this rule to expose the API : 

~ExecStart=/usr/bin/docker daemon -H unix:// -H tcp://localhost:2375 *~

#+BEGIN_SRC 
systemctl daemon-reload
systemctl restart docker
#+END_SRC

Restart the jenkins service:

```
~sudo /etc/init.d/jenkins restart~
```

**** Ubuntu 16.04 **

*** update /lib/systemd/system/docker.service: *
replace:
~ExecStart=/usr/bin/dockerd fd://~
with
~ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375~

*** Update file /etc/init.d/docker*:
replace
~DOCKER_OPTS=~

with

~DOCKER_OPTS="-H tcp://0.0.0.0:2375"\~

** Jenkinsfile add input
#+BEGIN_SRC 
stage 'promotion'
def userInput = input(
 id: 'userInput', message: 'Let\'s promote?', parameters: [
 [$class: 'TextParameterDefinition', defaultValue: 'uat', description: 'Environment', name: 'env'],
 [$class: 'TextParameterDefinition', defaultValue: 'uat1', description: 'Target', name: 'target']
])
echo ("Env: "+userInput['env'])
echo ("Target: "+userInput['target'])
#+END_SRC

#+BEGIN_SRC 
stage 'promotion'
def userInput = input(
 id: 'userInput', message: 'Let\'s promote?', parameters: [
 [$class: 'TextParameterDefinition', defaultValue: 'uat', description: 'Environment', name: 'env']
])
echo ("Env: "+userInput)
#+END_SRC
